import socket
import requests
import threading
from bs4 import BeautifulSoup

# Port Scanner
def port_scanner(target, ports):
    print(f"Scanning {target}...")
    for port in ports:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(1)
        result = s.connect_ex((target, port))
        if result == 0:
            print(f"[+] Port {port} is open")
        s.close()

# Brute Force Login (Basic)
def brute_force_login(url, username, password_list):
    for password in password_list:
        data = {"username": username, "password": password}
        response = requests.post(url, data=data)
        if "invalid" not in response.text.lower():
            print(f"[+] Valid credentials found: {username}:{password}")
            return True
    print("[-] No valid credentials found.")
    return False

# Web Vulnerability Scanner
def scan_vulnerabilities(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")
    forms = soup.find_all("form")
    if forms:
        print(f"[+] Found {len(forms)} forms on {url}")
    else:
        print("[-] No forms found.")

if __name__ == "__main__":
    print("Penetration Testing Toolkit")
    print("1. Port Scanner")
    print("2. Brute Force Login")
    print("3. Web Vulnerability Scanner")
    choice = input("Choose an option: ")
    
    if choice == "1":
        target = input("Enter target IP or domain: ")
        ports = [21, 22, 80, 443, 3306]
        port_scanner(target, ports)
    elif choice == "2":
        url = input("Enter login URL: ")
        username = input("Enter username: ")
        password_list = ["password", "admin", "123456"]
        brute_force_login(url, username, password_list)
    elif choice == "3":
        url = input("Enter target URL: ")
        scan_vulnerabilities(url)
    else:
        print("Invalid choice!")
